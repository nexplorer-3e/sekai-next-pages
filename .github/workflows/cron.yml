name: CRON

# Run this workflow every time a new commit pushed to your repository
on:
  schedule:
    - cron: '2 * * * *'

# on: push

jobs:
  cron:
    name: Database Fetch
    runs-on: ubuntu-latest

    steps:
      - name: "Init: Checkout"
        uses: actions/checkout@v2

      - name: "Init: Node"
        uses: actions/setup-node@v1
        with:
          node-version: "14.*"

      - name: "Cache: node_modules"
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: "Init: Install dependencies"
        run: yarn

      - name: "Exec: Check for update"
        id: prepare_metadata
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: echo "::set-output name=updatedTimestamp::$(yarn --silent cron:getDBLatestUpdate)"

      - name: "Cache: .cache/data.json"
        uses: actions/cache@v2
        with:
          path: .cache/data.json
          key: ${{ runner.OS }}-sekai-next-data-json-v2-${{ steps.prepare_metadata.outputs.updatedTimestamp }}
          restore-keys: |
            ${{ runner.OS }}-sekai-next-data-json-v2-

      - name: "Exec: Deploy Hooks"
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          DEPLOY_HOOKS: ${{ secrets.DEPLOY_HOOKS }}
          CDN_HOOKS: ${{ secrets.CDN_HOOKS }}
          DB_UPDATED_AT: ${{ steps.prepare_metadata.outputs.updatedTimestamp }}
        run: yarn cron:hooker

      - uses: actions/upload-artifact@v2
        with:
          name: data
          path: .cache/data.json
